// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SortScreen should render 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View>
    <Text>
      Sort by:
    </Text>
    <View
      style={
        {
          "marginVertical": 15,
          "padding": 10,
          "width": 250,
        }
      }
    >
      <RNCPicker
        items={
          [
            {
              "label": "None",
              "testID": undefined,
              "textColor": undefined,
              "value": undefined,
            },
            {
              "label": "Rating",
              "testID": undefined,
              "textColor": undefined,
              "value": "rating",
            },
            {
              "label": "Stars",
              "testID": undefined,
              "textColor": undefined,
              "value": "stars",
            },
            {
              "label": "Price",
              "testID": undefined,
              "textColor": undefined,
              "value": "price",
            },
          ]
        }
        numberOfLines={1}
        onChange={[Function]}
        selectedIndex={0}
        style={
          [
            {
              "height": 216,
            },
            undefined,
          ]
        }
        testID="sort-picker"
      />
    </View>
    <Text>
      Order:
    </Text>
    <View
      style={
        {
          "marginVertical": 15,
          "padding": 10,
          "width": 250,
        }
      }
    >
      <RNCPicker
        items={
          [
            {
              "label": "Ascending",
              "testID": undefined,
              "textColor": undefined,
              "value": "ascending",
            },
            {
              "label": "Descending",
              "testID": undefined,
              "textColor": undefined,
              "value": "descending",
            },
          ]
        }
        numberOfLines={1}
        onChange={[Function]}
        selectedIndex={1}
        style={
          [
            {
              "height": 216,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
  <View>
    <Text>
      Price Range:
    </Text>
    <Text>
      0
       - 
      500
    </Text>
    <View
      animationType="timing"
      onLayout={[Function]}
      onValueChange={[Function]}
      step={1}
      style={
        [
          {
            "height": 40,
            "justifyContent": "center",
          },
          {},
          {
            "marginVertical": 15,
            "padding": 10,
            "width": 250,
          },
        ]
      }
      trackClickable={true}
      trackMarks={[]}
      value={
        [
          0,
          500,
        ]
      }
    >
      <View
        onLayout={[Function]}
        renderToHardwareTextureAndroid={true}
        style={
          [
            {
              "borderRadius": 2,
              "height": 4,
            },
            {
              "backgroundColor": "#b3b3b3",
            },
            undefined,
          ]
        }
      />
      <View
        collapsable={false}
        renderToHardwareTextureAndroid={true}
        style={
          {
            "backgroundColor": "#3f3f3f",
            "borderRadius": 2,
            "height": 4,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "width": 0,
          }
        }
      />
      <View
        collapsable={false}
        onLayout={[Function]}
        style={
          {
            "backgroundColor": "tomato",
            "borderRadius": 10,
            "height": 20,
            "opacity": 0,
            "position": "absolute",
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": 20,
          }
        }
      />
      <View
        collapsable={false}
        onLayout={[Function]}
        style={
          {
            "backgroundColor": "tomato",
            "borderRadius": 10,
            "height": 20,
            "opacity": 0,
            "position": "absolute",
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
            ],
            "width": 20,
          }
        }
      />
      <View
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          [
            {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": -20,
              "marginLeft": -20,
              "marginRight": -20,
              "marginTop": -20,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="apply"
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
            {
              "color": "tomato",
            },
          ]
        }
      >
        Apply
      </Text>
    </View>
  </View>
  <Text
    onPress={[Function]}
    style={
      {
        "color": "tomato",
        "fontWeight": "bold",
        "margin": 16,
      }
    }
  >
    Clear
  </Text>
</View>
`;
